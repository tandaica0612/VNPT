@{ ViewData["Title"] = "Khách hàng sử dụng dịch vụ"; }

<div class="row">
    <div class="col-md-12">
        <div class="card card-primary">
            <div class="card-header">
                <h3 class="card-title">Khách hàng sử dụng dịch vụ</h3>
            </div>
            <div class="card-body">
                <div class="row">
                    <input type="hidden" id="Action" name="Action" value="0">
                    <div class='col-sm-4'>
                        @(Html.Kendo().DropDownList()
                     .Name("Product")
                     .DataValueField("ID")
                     .DataTextField("Title")
                     .HtmlAttributes(new { @class = "form-control" })
                       .Filter(FilterType.Contains)
                     .DataSource(dataSource => dataSource.Ajax().Read(t => t.Action("GetProductToList", "Config")))
                            )
                    </div>
                    <div class='col-sm-1'>
                        <button style="width:100%;" title="Tìm kiếm" class="btn btn-success" onclick="onSearchProduct()">
                            <span class="fas fa-search"></span>
                        </button>
                    </div>
                    <div class='col-sm-4'>
                        @(Html.Kendo().DropDownList()
                     .Name("City")
                     .DataValueField("ID")
                     .DataTextField("Title")
                     .HtmlAttributes(new { @class = "form-control" })
                       .Filter(FilterType.Contains)
                     .DataSource(dataSource => dataSource.Ajax().Read(t => t.Action("GetCityToList", "Config")))
                            )
                    </div>
                    <div class='col-sm-1'>
                        <button style="width:100%;" title="Tìm kiếm" class="btn btn-success" onclick="onSearchProductAndCity()">
                            <span class="fas fa-search"></span>
                        </button>
                    </div>
                </div>
                <br />
                @(Html.Kendo().Grid<VNPT.Data.Models.Membership>()
.Name("Membership")
.Columns(columns =>
{

    columns.Template(@"<a href='/Membership/CustomerDetail/#=ID#' class='btn btn-success' style='color:white;'><i class='fas fa-edit'></i></a>").Width(70).HtmlAttributes(new { style = "text-align:center;" });
    columns.Bound(t => t.TaxCode).Title("Mã số thuế").Width(150).HtmlAttributes(new { @class = "text-right" });
    columns.Bound(t => t.MembershipCode).Title("Mã").Width(150).HtmlAttributes(new { @class = "text-right" });
    columns.Bound(t => t.Phone).Title("Điện thoại").Width(150).HtmlAttributes(new { @class = "text-right" });
    columns.Bound(t => t.FullName).Title("Khách hàng").Width(1000).HtmlAttributes(new { @style = "font-weight:bold;" });
    columns.Bound(t => t.Address).Title("Địa chỉ").Width(1000);
    columns.Bound(t => t.ID).Title("ID").Width(100);
})
.ToolBar(toolBar => toolBar.Search())
.Editable(editable => editable.Mode(GridEditMode.InLine))
.Sortable()
.Scrollable()
.Reorderable(r => r.Columns(true))
.Resizable(r => r.Columns(true))
.Pageable(pageable => pageable
.Refresh(true)
.PageSizes(true)
.ButtonCount(10))
.Excel(excel => excel
.FileName("Config.xlsx")
.Filterable(true)
.ProxyURL(Url.Action("ExportExcel", "Config"))
)
.Pdf(pdf => pdf
.AllPages()
.AvoidLinks()
.PaperSize("A4")
.Margin("2cm", "1cm", "1cm", "1cm")
.Landscape()
.RepeatHeaders()
.FileName("Config.pdf")
)
.HtmlAttributes(new { @class = "KendoGrid" })
.Search(search => { search.Field(f => f.TaxCode); search.Field(f => f.MembershipCode); search.Field(f => f.FullName); search.Field(f => f.Address); search.Field(f => f.Phone); })
.DataSource(dataSource => dataSource
.Ajax()
.PageSize(1000)
.Model(model =>
{
    model.Id(t => t.ID);

})
.Events(t => { t.RequestEnd("onGridRequestEnd"); })
.Read(t => t.Action("GetByProductIDAndCityIDAndActionToList", "Membership").Data("filterMembership"))

)
)
            </div>
        </div>
    </div>
</div>

@(Html.Kendo().Notification()
    .Name("Notification")
    .Position(p => p.Pinned(true).Top(30).Right(30))
    .Width(400)
)

<script>
    function onGridRequestEnd(e) {
        if ((e.type == "create") || (e.type == "update") || (e.type == "destroy")) {
            var response = e.response;
            var messageType = response.split('-')[0];
            var note = response.split('-')[1];
            var notification = $("#Notification").data("kendoNotification");
            notification.show(note, messageType);
            $("#Membership").data("kendoGrid").dataSource.read();
        }
    }
    function filterMembership(e) {
        var productIDValue = $("#Product").data("kendoDropDownList").value();
        var cityIDValue = $("#City").data("kendoDropDownList").value();
        var actionValue = $("#Action").val();        
        return { productID: productIDValue, cityID: cityIDValue, action: actionValue };
    }
    function onSearchProduct() {
        $("#Action").val('0');        
        $("#Membership").data("kendoGrid").dataSource.read();
    }
    function onSearchProductAndCity() {
        $("#Action").val('1');
        $("#Membership").data("kendoGrid").dataSource.read();
    }
</script>
