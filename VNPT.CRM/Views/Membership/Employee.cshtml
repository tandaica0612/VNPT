@{ ViewData["Title"] = "Nhân viên"; }


<div class="row">
    <div class="col s12 m12 l12">
        <div class="card card card-default scrollspy">
            <div class="card-content">
                <div class="row">
                    <div class="col s12 m6 l6">
                    </div>
                    <div class="col s12 m6 l2">
                    </div>
                    <div class="col s12 m6 l2">
                    </div>
                    <div class="col s12 m6 l2">
                        <a href="/Membership/EmployeeDetail?ID=0" style="height:46px; padding-top:6px;" class="waves-effect waves-light btn gradient-45deg-green-teal z-depth-1 border-round"><i class="material-icons">person_add</i></a>
                    </div>                    
                    <div class="col s12 m12 l12">
                        @(Html.Kendo().Grid<VNPT.Data.Models.Membership>()
.Name("Membership")
.Columns(columns =>
{

    columns.Template(@"<a target='_blank' href='/Membership/EmployeeDetail?ID=#=ID#' style='color: blue;'><i class='material-icons'>open_in_new</i></a>").Width(70).HtmlAttributes(new { style = "text-align:center;" }).Locked(true);
    columns.Bound(t => t.MembershipCode).Title("Mã nhân viên").Width(200);
    columns.Bound(t => t.FullName).Title("Khách hàng").Width(300).HtmlAttributes(new { @style = "font-weight:bold;" });
    columns.Bound(t => t.Phone).Title("Điện thoại").Width(300);
    columns.Bound(t => t.Email).Title("Email").Width(200);
})
.Editable(editable => editable.Mode(GridEditMode.InLine))
.Sortable()
.Scrollable()
.Reorderable(r => r.Columns(true))
.Resizable(r => r.Columns(true))
.Pageable(pageable => pageable
.Refresh(true)
.PageSizes(true)
.ButtonCount(10))
.Excel(excel => excel
.FileName("Config.xlsx")
.Filterable(true)
.ProxyURL(Url.Action("ExportExcel", "Config"))
)
.Pdf(pdf => pdf
.AllPages()
.AvoidLinks()
.PaperSize("A4")
.Margin("2cm", "1cm", "1cm", "1cm")
.Landscape()
.RepeatHeaders()
.FileName("Config.pdf")
)
.HtmlAttributes(new { @class = "KendoGrid" })
.Search(search => { search.Field(f => f.Email); search.Field(f => f.MembershipCode); search.Field(f => f.FullName); search.Field(f => f.Phone); })
.DataSource(dataSource => dataSource
.Ajax()
.PageSize(100)
.Model(model =>
{
    model.Id(t => t.ID);
})
.Events(t => { t.RequestEnd("onGridRequestEnd"); })
.Read(t => t.Action("GetByThanhVienToList", "Membership"))

)
)
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@(Html.Kendo().Notification()
    .Name("Notification")
    .Position(p => p.Pinned(true).Top(30).Right(30))
    .Width(400)
)

<script>
    function onGridRequestEnd(e) {
        if ((e.type == "create") || (e.type == "update") || (e.type == "destroy")) {
            var response = e.response;
            var messageType = response.split('-')[0];
            var note = response.split('-')[1];
            var notification = $("#Notification").data("kendoNotification");
            notification.show(note, messageType);
            $("#Membership").data("kendoGrid").dataSource.read();
        }
    }   
</script>
