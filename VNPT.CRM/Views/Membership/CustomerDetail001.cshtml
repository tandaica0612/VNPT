@{ ViewData["Title"] = Model.Membership.FullName + " - Thông tin khách hàng"; }

@model VNPT.CRM.Models.BaseViewModel

<form asp-action="SaveCustomer" asp-controller="Membership">
    @Html.HiddenFor(Model => Model.Membership.ID)
    @Html.HiddenFor(Model => Model.Membership.ParentID)
    <div class="row">
        <div class="col s12">
            <div class="card card-tabs">
                <div class="card-content">
                    <div class="card-title">
                        <div class="row">
                            <div class="col s12 m6 l6">
                                @(Html.Kendo().DropDownList()
                        .Name("Customer")
                     .DataValueField("ID")
                     .DataTextField("FullName")
                     .HtmlAttributes(new { @class = "form-control", @style = "height:46px;" })
                       .Filter(FilterType.Contains)
                     .DataSource(dataSource => dataSource.Ajax().Read(t => t.Action("GetSQLDoanhNghiepToList", "Membership")))
                            )
                            </div>
                            <div class="col s12 m6 l6">
                                <ul class="tabs">
                                    <li class="tab col s3">
                                        <a onclick="onSearch()" style="height:46px; padding-top:6px; color:#ffffff;" class="waves-effect waves-light btn gradient-45deg-green-teal z-depth-1 border-round"><i class="material-icons">search</i></a>
                                    </li>
                                    <li class="tab col s3">
                                        <button type="submit" title="Save" style="height:46px; padding-top:6px; color:#ffffff;" class="waves-effect waves-light btn gradient-45deg-light-blue-cyan z-depth-1 border-round">
                                            <i class="material-icons">save</i>
                                        </button>
                                    </li>
                                    <li class="tab col s3">
                                        <a href="/Membership/CustomerDetail?ID=0" style="height:46px; padding-top:6px; color:#ffffff;" class="waves-effect waves-light btn gradient-45deg-green-teal z-depth-1 border-round"><i class="material-icons">person_add</i></a>
                                    </li>
                                    <li class="tab col s3">
                                        <a href="/Membership/CustomerList" style="height:46px; padding-top:6px; color:#ffffff;" class="waves-effect waves-light btn gradient-45deg-amber-amber z-depth-1 border-round"><i class="material-icons">keyboard_backspace</i></a>
                                    </li>
                                </ul>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col s12 m6 l6">
                            <div class='form-group'>
                                <label for='FullName'>Khách hàng</label>
                                @(Html.TextBoxFor(Model => Model.Membership.FullName, new { placeholder = "Khách hàng", @class = "form-control" }))
                            </div>
                            <div class='form-group'>
                                <label for='TaxCode'>Mã số thuế</label>
                                @(Html.TextBoxFor(Model => Model.Membership.TaxCode, new { placeholder = "Mã số thuế", @class = "form-control" }))
                            </div>
                            <div class='form-group'>
                                <label for='MembershipCode'>Mã khách hàng</label>
                                @(Html.TextBoxFor(Model => Model.Membership.MembershipCode, new { placeholder = "Mã khách hàng", @class = "form-control" }))
                            </div>
                            <div class='form-group'>
                                <label for='Phone'>Điện thoại</label>
                                @(Html.TextBoxFor(Model => Model.Membership.Phone, new { placeholder = "Điện thoại", @class = "form-control" }))
                            </div>
                           
                            <div class='form-group'>
                                <label for='Address'>Địa chỉ</label>
                                @(Html.TextBoxFor(Model => Model.Membership.Address, new { placeholder = "Địa chỉ", @class = "form-control" }))
                            </div>
                            <div class='form-group'>
                                <label for='ContactFullName'>Liên hệ</label>
                                @(Html.TextBoxFor(Model => Model.Membership.ContactFullName, new { placeholder = "Liên hệ", @class = "form-control" }))
                            </div>
                            <div class='form-group'>
                                <label for='ContactPhone'>Điện thoại liên hệ</label>
                                @(Html.TextBoxFor(Model => Model.Membership.ContactPhone, new { placeholder = "Điện thoại liên hệ", @class = "form-control" }))
                            </div>
                        </div>
                        <div class="col s12 m6 l6">
                            <div class='form-group'>
                                <label for='Email'>Email</label>
                                @(Html.TextBoxFor(Model => Model.Membership.Email, new { placeholder = "Email", @class = "form-control" }))
                            </div>
                            <div class='form-group'>
                                <label for='NganHang_SoTaiKhoan'>Số tài khoản ngân hàng</label>
                                @(Html.TextBoxFor(Model => Model.Membership.NganHang_SoTaiKhoan, new { placeholder = "Số tài khoản ngân hàng", @class = "form-control" }))
                            </div>
                            <div class='form-group'>
                                <label for='ContactPhone'>Ngân hàng</label>
                                @(Html.Kendo().DropDownListFor(Model => Model.Membership.NganHangID)
                     .DataValueField("ID")
                     .DataTextField("Title")
                     .HtmlAttributes(new { @class = "form-control", @style="height:50px;" })
                       .Filter(FilterType.Contains)
                     .DataSource(dataSource => dataSource.Ajax().Read(t => t.Action("GetNganHangToList", "Config")))
                            )
                            </div>
                            <div class='form-group'>
                                <label for='ContactPhone'>Ngành nghề</label>
                                @(Html.Kendo().DropDownListFor(Model => Model.Membership.CategoryID)
                     .DataValueField("ID")
                     .DataTextField("Title")
                     .HtmlAttributes(new { @class = "form-control", @style="height:50px;" })
                       .Filter(FilterType.Contains)
                     .DataSource(dataSource => dataSource.Ajax().Read(t => t.Action("GetCustomerTypeToList", "Config")))
                            )
                            </div>
                            <div class='form-group'>
                                <label for='ContactPhone'>Phường, xã, thị trấn</label>
                                @(Html.Kendo().DropDownListFor(Model => Model.Membership.WardID)
                     .DataValueField("ID")
                     .DataTextField("Title")
                     .HtmlAttributes(new { @class = "form-control", @style = "height:50px;" })
                       .Filter(FilterType.Contains)
                     .DataSource(dataSource => dataSource.Ajax().Read(t => t.Action("GetWardToList", "Config")))
                            )
                            </div>
                            <div class='form-group'>
                                <label for='ContactPhone'>Thành phố, huyện, thị xã</label>
                                @(Html.Kendo().DropDownListFor(Model => Model.Membership.CityID)
                     .DataValueField("ID")
                     .DataTextField("Title")
                     .HtmlAttributes(new { @class = "form-control", @style = "height:50px;" })
                       .Filter(FilterType.Contains)
                     .DataSource(dataSource => dataSource.Ajax().Read(t => t.Action("GetCityToList", "Config")))
                            )
                            </div>
                            <div class='form-group'>
                                <label for='ContactPhone'>Tỉnh</label>
                                @(Html.Kendo().DropDownListFor(Model => Model.Membership.ProvinceID)
                     .DataValueField("ID")
                     .DataTextField("Title")
                     .HtmlAttributes(new { @class = "form-control", @style = "height:50px;" })
                       .Filter(FilterType.Contains)
                     .DataSource(dataSource => dataSource.Ajax().Read(t => t.Action("GetProvinceToList", "Config")))
                            )
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</form>
<div class="row">
    <div class="col s12 m12 l12">
        <div class="card card card-default scrollspy">
            <div class="card-content">
                <h4 class="card-title">Dịch vụ đăng ký</h4>
                <div class="row">
                    @(Html.Kendo().Grid<VNPT.Data.DataTransferObject.MembershipPropertyDataTransfer>()
.Name("MembershipPropertyDataTransfer")
.Columns(columns =>
{
    columns.Command(command => { command.Edit().Text("&nbsp;").CancelText("&nbsp;").UpdateText("&nbsp;").IconClass("fas fa-edit").HtmlAttributes(new { style = "font-size: 16px; padding-left:16px; padding-top:6px; border-radius: 6px; font-weight:bold; width:50px;" }); }).Width(150);
    columns.Bound(t => t.ProductName).Title("Dịch vụ").Width(200);
    columns.Bound(t => t.PaymentCode).Title("Mã thanh toán").Width(200);
    columns.Bound(t => t.ProductCode).Title("Mã thuê bao").Width(200);
    columns.Bound(t => t.ValueContract).Title("Giá trị").Width(100).HtmlAttributes(new { @class = "text-right", @style="font-weight:bold;" });
    columns.Bound(t => t.DateContract).Title("Ngày ký").Width(120).HtmlAttributes(new { @class = "text-right" });
    columns.Bound(t => t.DateBegin).Title("Bắt đầu").Width(120).HtmlAttributes(new { @class = "text-right" });
    columns.Bound(t => t.DateEnd).Title("Kết thúc").Width(120).HtmlAttributes(new { @class = "text-right" });
    columns.Bound(t => t.ID).Title("ID").Width(100);
})
.ToolBar(toolBar => toolBar.Search())
.Editable(editable => editable.Mode(GridEditMode.InLine))
.Sortable()
.Scrollable()
.Reorderable(r => r.Columns(true))
.Resizable(r => r.Columns(true))
.Pageable(pageable => pageable
.Refresh(true)
.PageSizes(true)
.ButtonCount(10))
.Excel(excel => excel
.FileName("Config.xlsx")
.Filterable(true)
.ProxyURL(Url.Action("ExportExcel", "Config"))
)
.Pdf(pdf => pdf
.AllPages()
.AvoidLinks()
.PaperSize("A4")
.Margin("2cm", "1cm", "1cm", "1cm")
.Landscape()
.RepeatHeaders()
.FileName("Config.pdf")
)
.HtmlAttributes(new { @class = "KendoGrid" })
.Search(search => { search.Field(f => f.ProductName);})
.DataSource(dataSource => dataSource
.Ajax()
.PageSize(1000)
.Model(model =>
{
    model.Id(t => t.ID);
    model.Field(t => t.ID).Editable(false);
    model.Field(t => t.ProductName).Editable(false);
    model.Field(t => t.PaymentCode).Editable(false);
    model.Field(t => t.ProductCode).Editable(false);
})
.Events(t => { t.RequestEnd("onGridRequestEndMembershipPropertyDataTransfer"); })
.Read(t => t.Action("GetDataTransferProductByMembershipIDToList", "MembershipProperty").Data("filterMembershipPropertyDataTransfer"))
.Update(t => t.Action("Update", "MembershipProperty"))
)
)
                </div>
            </div>
        </div>
    </div>
</div>

<div class="row">
    <div class="col s12 m12 l12">
        <div class="card card card-default scrollspy">
            <div class="card-content">
                <h4 class="card-title">Doanh thu theo tháng</h4>
                <div class="row">
                    <div class="col s12 m4 l4">
                        @(Html.Kendo().DropDownListFor(Model => Model.YearFinance)
                     .DataValueField("Display")
                     .DataTextField("Display")
                     .HtmlAttributes(new { @class = "form-control" })
                     .DataSource(dataSource => dataSource.Ajax().Read(t => t.Action("GetYearFinanceToList", "AppGlobal")))
                            )
                    </div>
                    <div class="col s12 m4 l4">
                        @(Html.Kendo().DropDownListFor(Model => Model.MonthFinance)
                     .DataValueField("Display")
                     .DataTextField("Display")
                     .HtmlAttributes(new { @class = "form-control" })
                     .DataSource(dataSource => dataSource.Ajax().Read(t => t.Action("GetMonthFinanceToList", "AppGlobal")))
                            )
                    </div>
                    <div class="col s12 m4 l4">
                        <a onclick="onSearchInvoicePropertyDataTransfer()" style="" class="waves-effect waves-light btn gradient-45deg-green-teal z-depth-1 border-round"><i class="material-icons">search</i></a>
                    </div>
                    <br />
                    <br />
                    <div class="col s12 m12 l12">
                        @(Html.Kendo().Grid<VNPT.Data.DataTransferObject.InvoicePropertyDataTransfer>()
.Name("InvoicePropertyDataTransfer")
.Columns(columns =>
{
    columns.Bound(t => t.ProductName).Title("Dịch vụ").Width(200);
    columns.Bound(t => t.PaymentCode).Title("Mã thanh toán").Width(200);
    columns.Bound(t => t.ProductCode).Title("Mã thuê bao").Width(200);
    columns.Bound(t => t.Quantity).Title("Số lượng").Width(100).HtmlAttributes(new { @class = "text-right" });
    columns.Bound(t => t.UnitPrice).Title("Đơn giá").Width(100).HtmlAttributes(new { @class = "text-right" });
    columns.Bound(t => t.Total).Title("Thành tiền").Width(100).HtmlAttributes(new { @class = "text-right", @style = "font-weight:bold;" });
})
.Editable(editable => editable.Mode(GridEditMode.InLine))
.Sortable()
.Scrollable()
.Reorderable(r => r.Columns(true))
.Resizable(r => r.Columns(true))
.Pageable(pageable => pageable
.Refresh(true)
.PageSizes(true)
.ButtonCount(10))
.Excel(excel => excel
.FileName("Config.xlsx")
.Filterable(true)
.ProxyURL(Url.Action("ExportExcel", "Config"))
)
.Pdf(pdf => pdf
.AllPages()
.AvoidLinks()
.PaperSize("A4")
.Margin("2cm", "1cm", "1cm", "1cm")
.Landscape()
.RepeatHeaders()
.FileName("Config.pdf")
)
.HtmlAttributes(new { @class = "KendoGrid" })
.Search(search => { search.Field(f => f.ProductName);})
.DataSource(dataSource => dataSource
.Ajax()
.PageSize(1000)
.Model(model =>
{
    model.Id(t => t.ID);
    model.Field(t => t.ID).Editable(false);
    model.Field(t => t.ProductName).Editable(false);
    model.Field(t => t.PaymentCode).Editable(false);
    model.Field(t => t.ProductCode).Editable(false);
})
.Read(t => t.Action("GetDataTransferProductByMembershipIDAndYearAndMonthToList", "InvoiceProperty").Data("filterInvoicePropertyDataTransfer"))
)
)
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@(Html.Kendo().Notification()
    .Name("Notification")
    .Position(p => p.Pinned(true).Top(30).Right(30))
    .Width(400)
)

<script>
    function onGridRequestEndMembershipPropertyDataTransfer(e) {
        if ((e.type == "create") || (e.type == "update") || (e.type == "destroy")) {
            var response = e.response;
            var messageType = response.split('-')[0];
            var note = response.split('-')[1];
            var notification = $("#Notification").data("kendoNotification");
            notification.show(note, messageType);
            $("#MembershipPropertyDataTransfer").data("kendoGrid").dataSource.read();
        }
    }
    function filterMembershipPropertyDataTransfer(e) {
        var membershipIDValue = $("#Membership_ID").val();
        return { membershipID: membershipIDValue };
    }
    function filterInvoicePropertyDataTransfer(e) {
        var membershipIDValue = $("#Membership_ID").val();
        var yearValue = $("#YearFinance").data("kendoDropDownList").value();
        var monthValue = $("#MonthFinance").data("kendoDropDownList").value();
        return { membershipID: membershipIDValue, year: yearValue, month: monthValue };
    }
    function onSearchInvoicePropertyDataTransfer() {
        $("#InvoicePropertyDataTransfer").data("kendoGrid").dataSource.read();
    }
    function onSearch() {
        var IDValue = $("#Customer").data("kendoDropDownList").value();
        var url = "/Membership/CustomerDetail?ID=" + IDValue;
        window.location.replace(url);
    }
</script>
